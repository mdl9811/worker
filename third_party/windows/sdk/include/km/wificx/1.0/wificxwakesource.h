// Copyright (C) Microsoft Corporation. All rights reserved.

//
// NOTE: This header is generated by stubwork.  Please make any 
//       modifications to the corresponding template files 
//       (.x or .y) and use stubwork to regenerate the header
//

#ifndef _WIFICXWAKESOURCE_H_
#define _WIFICXWAKESOURCE_H_

#ifndef WDF_EXTERN_C
  #ifdef __cplusplus
    #define WDF_EXTERN_C       extern "C"
    #define WDF_EXTERN_C_START extern "C" {
    #define WDF_EXTERN_C_END   }
  #else
    #define WDF_EXTERN_C
    #define WDF_EXTERN_C_START
    #define WDF_EXTERN_C_END
  #endif
#endif

WDF_EXTERN_C_START



typedef enum _WIFI_WAKE_SOURCE_TYPE
{
    WifiWakeSourceTypeNloDiscovery = 1,
    WifiWakeSourceTypeApAssociationLost,
    WifiWakeSourceTypeGtkHandshakeError,
    WifiWakeSourceTypeFourWayHandshakeRequest,
} WIFI_WAKE_SOURCE_TYPE;


//
// WIFI Function: WifiWakeSourceGetType
//
typedef
_IRQL_requires_(PASSIVE_LEVEL)
WDFAPI
WIFI_WAKE_SOURCE_TYPE
(NTAPI *PFN_WIFIWAKESOURCEGETTYPE)(
    _In_
    PWIFI_DRIVER_GLOBALS DriverGlobals,
    _In_
    WIFIWAKESOURCE WakeSource
    );

_IRQL_requires_(PASSIVE_LEVEL)
FORCEINLINE
WIFI_WAKE_SOURCE_TYPE
WifiWakeSourceGetType(
    _In_
    WIFIWAKESOURCE WakeSource
    )
{
    return ((PFN_WIFIWAKESOURCEGETTYPE) WifiFunctions[WifiWakeSourceGetTypeTableIndex])(WifiDriverGlobals, WakeSource);
}

//
// WIFI Function: WifiWakeSourceGetAdapter
//
typedef
_IRQL_requires_(PASSIVE_LEVEL)
WDFAPI
NETADAPTER
(NTAPI *PFN_WIFIWAKESOURCEGETADAPTER)(
    _In_
    PWIFI_DRIVER_GLOBALS DriverGlobals,
    _In_
    WIFIWAKESOURCE WakeSource
    );

_IRQL_requires_(PASSIVE_LEVEL)
FORCEINLINE
NETADAPTER
WifiWakeSourceGetAdapter(
    _In_
    WIFIWAKESOURCE WakeSource
    )
{
    return ((PFN_WIFIWAKESOURCEGETADAPTER) WifiFunctions[WifiWakeSourceGetAdapterTableIndex])(WifiDriverGlobals, WakeSource);
}



WDF_EXTERN_C_END

#endif // _WIFICXWAKESOURCE_H_

